import pygame
import constants

class SpriteSheet(object):
    """Class used to grab images out of a sprite sheet"""

    def __init__(self, file_name):
        self.sprite_sheet = pygame.image.load(file_name).convert()

    def get_image(self, x, y, width, height):
        """Grab image out of a sprite sheet.
        x,y: x,y location of sprite
        width, height: width/height of sprite"""

        #create new blank image
        image = pygame.Surface([width, height]).convert()

        #copy the sprite from large sheet onto small image
        image.blit(self.sprite_sheet, (0,0), (x,y, width, height))

        #assuming black works as the transparent color
        image.set_colorkey(constants.BLACK)

        #Return the image
        return image

class Cloud(pygame.sprite.Sprite):
    def __init__(self, sprite_sheet_data):
        super().__init__()

        sprite_sheet = SpriteSheet("testimage.jpg")
        self.image = sprite_sheet.get_image(sprite_sheet_data[0], sprite_sheet_data[1], sprite_sheet_data[2], sprite_sheet_data[3])

        self.rect = self.image_get_rect()

class MovingCloud(Cloud):
    """Creates a moving cloud"""
    def __init__(self, sprite_sheet_data):
        super().__init__(sprite_sheet_data)

        self.change_x = 0
        self.change_y = 0

        self.boundary_top = 0
        self.boundary_bottom = 0
        self.boundary_left = 0
        self.boundary_right = 0

        #probably won't need these two
        self.level = None
        self.player = None

        def update(self):
            """Move the cloud"""
            #move left/right
            self.rect.x += self.change_x

            #move up/down
            self.rect.y += self.change_y

class Scene():
    """Generic super class used to define the objects, can create subclasses to actually create specific landscapes"""
    def __init__(self):
        #Lists of all sprites needed for scenery
        self.cloud_list = None
        self.star_list = None

        #background image
        self.background = None

        #How far this world has been scrolled left/right
        self.world_shift = 0
        self.cloud_list = pygame.sprite.Group()
        self.star_list = pygame.sprite.Group()

    #Update everything in the landscapes
    def draw(self, screen):
        #Draw the background
        screen.fill(constants.BLUE)
        screen.blit(self.background, (self.world_shift // 3,0))

        #Draw all the sprite lists we have
        self.cloud_list.draw(screen)
        self.star_list.draw(screen)

    def shift_world(self, shift_x):
        #make everything scroll at a nice, constant rate

        #keep track of the shift amount
        self.world_shift += shift_x

        #Go through all the sprite lists and shift
        for cloud in self.cloud_list:
            cloud.rect.x += shift_x

        for star in self.star_list:
            star.rect.x += shift_x

class Fantasy(Scene):
    """Defintion for Fantasy live background"""

    def __init__(self, player):
        #Call parent constructor
        Scene.__init__(self)

        self.background = pygame.image.load("testimage.jpg").convert()
        self.background.set_colorkey(constants.WHITE)

        #array with type of cloud, and x,y location of the platform.


#needs to generate sprites with a specific flow of animations when mouse is clicked
if __name__ == "__main__":
    img = SpriteSheet("testimage.jpg")
    img.get_image(0,0,960, 539)
